install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
exit
quit()
source('~/.active-rstudio-document')
above(1:20, 5)
source('~/.active-rstudio-document')
above(1:20, 5)
source('~/.active-rstudio-document')
above(1:20, 5)
swirl()
library(swirl)
swirl()
TRUE == TRUE
(F == T) == F
(FALSE == TRUE) == FALSE
6==7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5
| == 6, !FALSE)
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
quit()
library(datasets)
data(iris)
head(iris)
sapply(split(iris, iris$Species == 'virginica'), function(x) mean(x$Sepal.Length))
split(iris, iris$Species)
head(split(iris, iris$Species))
head(split(iris, iris$Species)['virginica'])
sapply(split(iris, iris$Species)['virginica'], mean)
sapply(split(iris, iris$Species)['virginica']$Sepal.Length, mean)
split(iris, iris$Species)['virginica']$Sepal.Length
split(iris, iris$Species)['virginica']
(split(iris, iris$Species)['virginica'])$Sepal.Length
(split(iris, iris$Species)['virginica'])[Sepal.Length]
(split(iris, iris$Species)['virginica'])[[Sepal.Length]]
(split(iris, iris$Species)['virginica'])[["Sepal.Length"]]
split(iris, iris$Species['virginica'])
split(iris, iris$Species=='virginica')
iris[split(iris, iris$Species=='virginica')]
iris[which(split(iris, iris$Species=='virginica'))]
iris[iris[split(iris, iris$Species=='virginica')]]
split(iris, iris$Species=='virginica')
(split(iris, iris$Species)['virginica'])
(split(iris, iris$Species)['virginica'])$Sepal.Length
summary(split(iris, iris$Species)['virginica'])
head(split(iris, iris$Species)['virginica'])
(split(iris, iris$Species)['virginica'])
a <- (split(iris, iris$Species)['virginica'])
a
a[virginica]
a$virginica
a$virginica$Sepal.Length
sapply(a$virginica$Sepal.Length, mean)
mean(a$virginica$Sepal.Length)
round(mean(a$virginica$Sepal.Length))
colMeans(iris)
head(iris)
apply(iris[,1:4], mean)
apply(iris[,1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data("mtcars")
library(datasets)
data(mtcars)
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
summary(mtcars)
head(mtcars)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(mpg, cyl, mean))["4"]
avgs <- with(mtcars, tapply(mpg, cyl, mean))
?abs
round(abs(avgs["8"] - avgs["4"]))
(abs(avgs["8"] - avgs["4"]))
debug(ls)
ls()
exit()
q
q()
quit()
cube <- function(x, n) {
x^3
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
set.seed(1)
rpois(5, 2)
?rnorm
?pois
?dpois
?ppois
??ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
?pbinom
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
name(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
q()
library(swirl)
swirl()
q()
library(swirl)
swirl()
bye()
swirl()
library(dplyr)
cran <- tbl_df(mydf)
head(mydf)
head(cran)
rm('mydf')
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarise(by_package)
summarise(by_package, mean(size))
submmit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?n
submit()
submit()
tbl
tbl(pack_sum)
pack_sum
cran
by_package
pack_sum
Use quantile(pack_sum$count, probs = 0.99)
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
?mutate
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, value, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
?gather
submit()
?spread
submit()
library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status, "passed")
?mutate
passed <- mutate(passed, status="passed")
passed
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
?separate
submit()
submit()
bye()
q()
library(swirl)
swirl()
install_course("Exploratory Data Analysis")
swirl()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
?par
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?geom
ibrary(ggplot2)
library(ggplot2movies)
install.packages("ggplot2movies")
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?lpoints
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = T)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
wcol
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=T)
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
dir()
setwd("~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2")
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
bye()
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
head(NEI)
head(SCC)
head(NEI)
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
head(NEI)
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
hist(NEIyear)
str(NEIyear)
hist(table(NEIyear))
hist(NEIyear$total)
plot(NEIyear)
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
plot(NEIyear)
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')
source('~/Projects/Coursera/Data Science Specialization/Exploratory Data Analysis/CourseProject2/cp2.R')

install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
exit
quit()
source('~/.active-rstudio-document')
above(1:20, 5)
source('~/.active-rstudio-document')
above(1:20, 5)
source('~/.active-rstudio-document')
above(1:20, 5)
swirl()
library(swirl)
swirl()
TRUE == TRUE
(F == T) == F
(FALSE == TRUE) == FALSE
6==7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5
| == 6, !FALSE)
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
quit()
library(datasets)
data(iris)
head(iris)
sapply(split(iris, iris$Species == 'virginica'), function(x) mean(x$Sepal.Length))
split(iris, iris$Species)
head(split(iris, iris$Species))
head(split(iris, iris$Species)['virginica'])
sapply(split(iris, iris$Species)['virginica'], mean)
sapply(split(iris, iris$Species)['virginica']$Sepal.Length, mean)
split(iris, iris$Species)['virginica']$Sepal.Length
split(iris, iris$Species)['virginica']
(split(iris, iris$Species)['virginica'])$Sepal.Length
(split(iris, iris$Species)['virginica'])[Sepal.Length]
(split(iris, iris$Species)['virginica'])[[Sepal.Length]]
(split(iris, iris$Species)['virginica'])[["Sepal.Length"]]
split(iris, iris$Species['virginica'])
split(iris, iris$Species=='virginica')
iris[split(iris, iris$Species=='virginica')]
iris[which(split(iris, iris$Species=='virginica'))]
iris[iris[split(iris, iris$Species=='virginica')]]
split(iris, iris$Species=='virginica')
(split(iris, iris$Species)['virginica'])
(split(iris, iris$Species)['virginica'])$Sepal.Length
summary(split(iris, iris$Species)['virginica'])
head(split(iris, iris$Species)['virginica'])
(split(iris, iris$Species)['virginica'])
a <- (split(iris, iris$Species)['virginica'])
a
a[virginica]
a$virginica
a$virginica$Sepal.Length
sapply(a$virginica$Sepal.Length, mean)
mean(a$virginica$Sepal.Length)
round(mean(a$virginica$Sepal.Length))
colMeans(iris)
head(iris)
apply(iris[,1:4], mean)
apply(iris[,1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data("mtcars")
library(datasets)
data(mtcars)
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
summary(mtcars)
head(mtcars)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(mpg, cyl, mean))["4"]
avgs <- with(mtcars, tapply(mpg, cyl, mean))
?abs
round(abs(avgs["8"] - avgs["4"]))
(abs(avgs["8"] - avgs["4"]))
debug(ls)
ls()
exit()
q
q()
quit()
cube <- function(x, n) {
x^3
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
set.seed(1)
rpois(5, 2)
?rnorm
?pois
?dpois
?ppois
??ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
?pbinom
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
name(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
q()
setwd("~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1")
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
dir()
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
dir()
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
sum(dat$Zip*dat$Ext,na.rm=T)
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
dir()
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
install.packages("XML")
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
dir()
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
dir()
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
install.packages("data.table")
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
tapply(DT$pwgtp15,DT$SEX,mean)
source('~/Projects/Coursera/Data Science Specialization/Getting and Cleaning Data/Week1/Quiz1/Quiz1.R')
DT <- fread("data3.csv")
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time(mean(DT$pwgtp15,by=DT$SEX))
install.packages("RMySQL")
